// Generated by view binder compiler. Do not edit!
package com.detech.Mito.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.airbnb.lottie.LottieAnimationView;
import com.detech.Mito.R;
import com.mikhaellopez.circularimageview.CircularImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView background;

  @NonNull
  public final ImageView coin;

  @NonNull
  public final ImageView coinImage;

  @NonNull
  public final TextView coins;

  @NonNull
  public final Button findButton;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final LottieAnimationView lottieAnimationView;

  @NonNull
  public final CircularImageView profilePicture;

  @NonNull
  public final ImageView rewardBtn;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final LinearLayout userCoinsLayout;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView background,
      @NonNull ImageView coin, @NonNull ImageView coinImage, @NonNull TextView coins,
      @NonNull Button findButton, @NonNull ImageView imageView4,
      @NonNull LinearLayout linearLayout2, @NonNull LinearLayout linearLayout3,
      @NonNull LottieAnimationView lottieAnimationView, @NonNull CircularImageView profilePicture,
      @NonNull ImageView rewardBtn, @NonNull TextView textView3, @NonNull TextView textView4,
      @NonNull TextView textView7, @NonNull LinearLayout userCoinsLayout) {
    this.rootView = rootView;
    this.background = background;
    this.coin = coin;
    this.coinImage = coinImage;
    this.coins = coins;
    this.findButton = findButton;
    this.imageView4 = imageView4;
    this.linearLayout2 = linearLayout2;
    this.linearLayout3 = linearLayout3;
    this.lottieAnimationView = lottieAnimationView;
    this.profilePicture = profilePicture;
    this.rewardBtn = rewardBtn;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.textView7 = textView7;
    this.userCoinsLayout = userCoinsLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.background;
      ImageView background = rootView.findViewById(id);
      if (background == null) {
        break missingId;
      }

      id = R.id.coin;
      ImageView coin = rootView.findViewById(id);
      if (coin == null) {
        break missingId;
      }

      id = R.id.coinImage;
      ImageView coinImage = rootView.findViewById(id);
      if (coinImage == null) {
        break missingId;
      }

      id = R.id.coins;
      TextView coins = rootView.findViewById(id);
      if (coins == null) {
        break missingId;
      }

      id = R.id.findButton;
      Button findButton = rootView.findViewById(id);
      if (findButton == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = rootView.findViewById(id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = rootView.findViewById(id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = rootView.findViewById(id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.lottieAnimationView;
      LottieAnimationView lottieAnimationView = rootView.findViewById(id);
      if (lottieAnimationView == null) {
        break missingId;
      }

      id = R.id.profilePicture;
      CircularImageView profilePicture = rootView.findViewById(id);
      if (profilePicture == null) {
        break missingId;
      }

      id = R.id.rewardBtn;
      ImageView rewardBtn = rootView.findViewById(id);
      if (rewardBtn == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = rootView.findViewById(id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = rootView.findViewById(id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = rootView.findViewById(id);
      if (textView7 == null) {
        break missingId;
      }

      id = R.id.userCoinsLayout;
      LinearLayout userCoinsLayout = rootView.findViewById(id);
      if (userCoinsLayout == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, background, coin, coinImage,
          coins, findButton, imageView4, linearLayout2, linearLayout3, lottieAnimationView,
          profilePicture, rewardBtn, textView3, textView4, textView7, userCoinsLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
